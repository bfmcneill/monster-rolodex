{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","theme/globalStyle.jsx","components/App.js","index.js"],"names":["StyledCard","styled","div","Card","props","monster","url","id","src","alt","name","email","StyledCardList","CardList","monsters","map","StyledInput","input","SearchBox","placeholder","handleChange","type","onChange","GlobalStyle","createGlobalStyle","StyledApp","StyledH1","h1","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","console","log","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"0OAEMA,EAAaC,IAAOC,IAAV,2XAgBT,SAASC,EAAKC,GACjB,IAAOC,EAAWD,EAAXC,QACDC,EAAG,+BAA2BD,EAAQE,GAAnC,0BACT,OACI,eAACP,EAAD,WACI,qBAAKQ,IAAKF,EAAKG,IAAKJ,EAAQK,OAC5B,6BAAKL,EAAQK,OACb,4BAAIL,EAAQM,WCtBxB,I,EAAMC,EAAeX,IAAOC,IAAR,oIASb,SAASW,EAAST,GACrB,OACA,cAACQ,EAAD,UACKR,EAAMU,SAASC,KAAI,SAACV,GAAD,OAAa,cAACF,EAAD,CAAuBE,QAASA,GAArBA,EAAQE,SCZ5D,I,EAAMS,EAAcf,IAAOgB,MAAV,+JAUV,SAASC,EAAT,GAA+C,IAA3BC,EAA0B,EAA1BA,YAAYC,EAAc,EAAdA,aAEnC,OACI,cAACJ,EAAD,CACAK,KAAK,SACLF,YAAaA,EACbG,SAAUF,ICjBlB,I,IAuBeG,EAvBKC,YAAH,shBCKXC,G,MAAYxB,IAAOC,IAAV,oDAITwB,EAAWzB,IAAO0B,GAAV,oGA+CCC,E,kDAxCb,aAAe,IAAD,8BACZ,gBAaFR,aAAe,SAACS,GACd,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAbjD,EAAKC,MAAQ,CAAEpB,SAAU,GAAIiB,YAAa,IAF9B,E,qDAKd,WAAqB,IAAD,OAElBI,MADY,8CAETC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACJ,EAAKT,SAAS,CAAEhB,SAAUyB,IAAS,kBAAMC,QAAQC,IAAI,EAAKP,e,oBAQhE,WACE,MAAkCQ,KAAKR,MAA/BpB,EAAR,EAAQA,SAAUiB,EAAlB,EAAkBA,YACZY,EAAmB7B,EAAS8B,QAAO,SAACvC,GAAD,OACvCA,EAAQK,KAAKmC,cAAcC,SAASf,MAEtC,OACE,qCACE,cAAC,EAAD,IACA,eAACN,EAAD,WACE,cAACC,EAAD,8BACA,cAACR,EAAD,CACEG,KAAK,SACLF,YAAY,SACZC,aAAcsB,KAAKtB,eAErB,cAACP,EAAD,CAAUC,SAAU6B,c,GAlCZI,aCblBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.34ac2a1f.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst StyledCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #95dada;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  padding: 25px;\r\n  cursor: pointer;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  backface-visibility: hidden;\r\n  transform: translateZ(0);\r\n  transition: transform 0.25s ease-out;\r\n  &:hover{\r\n    transform: scale(1.05); \r\n  }\r\n`\r\nexport function Card(props){\r\n    const {monster} = props\r\n    const url = `https://robohash.org/${monster.id}?set=set2&size=180x180`\r\n    return (\r\n        <StyledCard>\r\n            <img src={url} alt={monster.name} />\r\n            <h1>{monster.name}</h1>      \r\n            <p>{monster.email}</p>      \r\n        </StyledCard>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\nimport {Card} from '../card/card.component'\r\n\r\nconst StyledCardList=styled.div`\r\nwidth:85vw;\r\nmargin: 0 auto;\r\ndisplay: grid;\r\ngrid-template-columns: 1fr 1fr 1fr 1fr;\r\ngrid-gap: 20px;\r\n`\r\n\r\n\r\nexport function CardList(props){\r\n    return (\r\n    <StyledCardList>\r\n        {props.monsters.map((monster) => <Card key={monster.id} monster={monster}/>)}\r\n    </StyledCardList>\r\n    )}","import styled from 'styled-components'\r\n\r\n\r\nconst StyledInput = styled.input`\r\n-webkit-appearance: none;\r\nborder: none;\r\noutline: none;\r\npadding: 10px;\r\nwidth: 150px;\r\nline-height: 30px;\r\nmargin-bottom: 30px;\r\n`\r\n\r\nexport function SearchBox({placeholder,handleChange}){\r\n    \r\n    return (\r\n        <StyledInput   \r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}/>\r\n    )\r\n}","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n body {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background: linear-gradient(\r\n    to left,\r\n    rgba(7, 27, 82, 1) 0%,\r\n    rgba(0, 128, 128, 1) 100%\r\n  );\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}\r\n`\r\n\r\n\r\nexport default GlobalStyle","import { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { CardList } from \"./card-list/card-list.component\";\nimport { SearchBox } from \"./search-box/search-box.component\";\nimport GlobalStyle from \"../theme/globalStyle\";\nimport './App.css'\n\nconst StyledApp = styled.div`\n  text-align: center;\n`;\n\nconst StyledH1 = styled.h1`\n  font-family: \"Bigelow Rules\";\n  font-size: 72px;\n  color: #0ccac4;\n`;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { monsters: [], searchField: \"\" };\n  }\n\n  componentDidMount() {\n    const url = \"https://jsonplaceholder.typicode.com/users\";\n    fetch(url)\n      .then((response) => response.json())\n      .then((users) =>\n        this.setState({ monsters: users }, () => console.log(this.state))\n      );\n  }\n\n  handleChange = (event) => {\n    return this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField)\n    );\n    return (\n      <>\n        <GlobalStyle />\n        <StyledApp>\n          <StyledH1>Monster Rolodex</StyledH1>\n          <SearchBox\n            type=\"search\"\n            placeholder=\"search\"\n            handleChange={this.handleChange}\n          />\n          <CardList monsters={filteredMonsters} />\n        </StyledApp>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}